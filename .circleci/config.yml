# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
#version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
#jobs:
#  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#    docker:
#      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#    steps:
#      - checkout
#      - run:
#          name: "Say hello"
#          command: "echo Hello, World!"

#  say-world:
#    docker:
#      - image: cimg/base:stable
#    steps:
#      - checkout
#      - run:
#          name: "Say world"
#          command: "echo Hello, World!"
#    require:

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
#workflows:
#  say-hello-workflow:
#    jobs:
#      - say-hello



#=========================================

# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
#jobs:
#  print_hello:
#    docker:
#      - image: circleci/node:13.8.0
#    steps:
#      - run: echo hello
#  print_world:
#    docker:
#      - image: circleci/node:13.8.0
#    steps:
#      - run: echo world
#workflows:
  # Name the workflow "welcome"
#  welcome:
    # Run the welcome/run job in its own container
#    jobs:
#      - welcome/run
#      - print_hello
#      - print_world:
#          requires:
#            - print_hello

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - run: echo "text to output here" > ~/output.txt
    - persist_to_workspace:
        root: ~/
        paths:
          - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - attach_workspace:
        at: ~/
    - run: cat ~/output.txt

workflows:
  my_workflow:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output


#My pipeline id is << pipeline.id >> and my git branch is << pipeline.git.branch >>

#version: 2.1

#workflows:
#  test-env-vars:
#    jobs:
#      - build

#jobs:
#  build:
#    docker:
#      - image: cimg/base:2020.01
#    steps:
#      - checkout
#      - run:
#          name: "echo an env var that is part of our project"
#          command: |
#            echo $MY_ENV_VAR
